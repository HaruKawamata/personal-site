---
import homeNavIcon from "../images/home-nav.png"
import projectsNavIcon from "../images/projects-nav.png"
import blogNavIcon from "../images/blog-nav.png"
import clockblockerNavIcon from "../images/clockblocker-nav.png"
import hierarchyNavIcon from "../images/hierarchy-nav.png"
import isseiNavIcon from "../images/issei-nav.png"
import resumeNavIcon from "../images/resume-nav.png"
import featuredPages from "../images/featured-pages.gif"
const url = Astro.url
---
<nav id="side-nav" class="display-none-if-mobile">
  <header>
    <h3><img src={featuredPages} alt="Featured Pages" /></h3>
    <button class="menu-toggle close-btn">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
      <span> Close</span>
    </button>
  </header>

  <p>Click the buttons below to visit our featured areas!</p>
  <ul>
    <li>
      <a href="/" aria-current={url.pathname === "/" ? "page" : "false"}>
        <img src={homeNavIcon} alt="Home Nav" />
      </a> 
    </li>
    <li>
      <a href="/projects" aria-current={url.pathname === "/projects" ? "page" : "false"}>
        <img src={projectsNavIcon} alt="Projects Nav" />
      </a>
      <ul class="sub-list">
        <li>
          <a href="/projects/blog" aria-current={url.pathname === "/projects/blog" ? "page" : "false"}>
            <img src={blogNavIcon} alt="Projects/Blog Nav" />
          </a>
        </li>
        <li>
          <a href="/projects/clockblocker" aria-current={url.pathname === "/projects/clockblocker" ? "page" : "false"}>
            <img src={clockblockerNavIcon} alt="Projects/Clockblocker Nav" />
          </a>
        </li>
        <li>
          <a href="/projects/hierarchy" aria-current={url.pathname === "/projects/hierarchy" ? "page" : "false"}>
            <img src={hierarchyNavIcon} alt="Projects/Hierarchy Nav" />
          </a>
        </li>
        <li>
          <a href="/projects/issei" aria-current={url.pathname === "/projects/issei" ? "page" : "false"}>
            <img src={isseiNavIcon} alt="Projects/Issei Nav" />
          </a>
        </li>
      </ul>
    </li>
    <!-- <li>
      <a href="readme" aria-current={url.pathname === "/readme" ? "page" : "false"}>
        README.md
      </a>
    </li> -->
    <li>
      <a href="/resume.pdf" aria-current={url.pathname === "/resume" ? "page" : "false"}>
        <img src={resumeNavIcon} alt="Resume Nav" />
      </a>
    </li>
  </ul>
</nav>
<button class="menu-toggle menu-open-button">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="w-6 h-6"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
    ></path>
  </svg>
  <span> Menu</span>
</button>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    const menuOverlay = document.getElementById("side-nav")
    const menuToggles = document.querySelectorAll(".menu-toggle")

    const menuIsOpen = () => {
      const menuOverlay = document.getElementById("side-nav")
      if (menuOverlay != null) { return menuOverlay.classList.contains("force-display-on-mobile") }
      else { return false }
    }

    const focusFirstMenuItem = () => {
      if (menuOverlay != null) {
        const firstListItem = menuOverlay.querySelector("li a") as HTMLElement
        firstListItem.focus()
      }
    }

    document.addEventListener("focusin", () => {
      if (menuOverlay != null && menuIsOpen()) {
        focusFirstMenuItem()
      }
    })

    window.addEventListener("keydown", (event) => {
      if (event.key === "Escape" && menuOverlay != null && menuIsOpen()) {
        menuOverlay.classList.remove("force-display-on-mobile")
      }
    })

    menuToggles.forEach((button) => {
      button.addEventListener("click", () => {
        toggleMenu()
      })
    })

    const toggleMenu = () => {
      if (menuOverlay != null) {
        menuOverlay.classList.toggle("force-display-on-mobile")
        if (menuIsOpen()) {
          focusFirstMenuItem()
        }
      }
    }
  }
)
</script>

<style>
  #side-nav {
    background-color: #555555;
    /* position: fixed; */
    height: 100%;
    padding-right: 1.5rem;
    /* margin-top: 20vh; */
    max-width: 150px;
    z-index: 99;
  }
  #side-nav header {
    display: flex;
    justify-content: space-between
  }
  #side-nav h3 {
    padding-left: 1rem;
  }
  #side-nav h3 img {
    width: 100%;
  }
  #side-nav p {
    padding-left: 1rem;
  }
  #side-nav ul {
    list-style: none;
    padding-left: 1.5rem;
  }
  #side-nav li img {
    width: 105px;
  }
  @media (max-width: 767px) {
    #side-nav {
      position: fixed;
      max-width: none;
      width: 100vw;
      height: 100vh;
    }
  }
  .menu-toggle {
    align-items: center;
    background-color: transparent;
    border: 0;
    color: #ffffff;
    cursor: pointer;
    padding: 0;
    gap: 0.25rem;
    z-index: 11;
  }

  .menu-open-button {
    position: absolute;
    right: 0;
  }
</style>